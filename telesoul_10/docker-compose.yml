# TeleSoul 專案 docker-compose.yml
# 版本: 1.0.0
# 最后更新: 2024-03-21
# 参考: docs/dev/ENVIRONMENT_VARIABLE_GUIDELINES.md
# 所有服務用途、對應模組與文檔請參見 README.md、DOCKER_DEVELOPMENT_GUIDELINES.md

services:
  postgres:
    # 用途：主資料庫，對應所有後端微服務
    image: postgres:14
    container_name: telesoul-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-changeme}
      POSTGRES_DB: ${DB_NAME:-telesoul_dev}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    # 用途：快取與任務隊列，對應 Match/Billing/Queue 等模組
    image: redis:7
    container_name: telesoul-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASS:-changeme}"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASS:-changeme}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    # 用途：對象儲存，對應用戶上傳、KYC、報表等模組
    image: minio/minio
    container_name: telesoul-minio
    command: server /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minio123}
    ports:
      - "${MINIO_PORT:-9000}:9000"
    healthcheck:
      test: ["CMD", "mc", "alias", "set", "local", "http://localhost:9000", "${MINIO_ACCESS_KEY:-minio}", "${MINIO_SECRET_KEY:-minio123}"]
      interval: 15s
      timeout: 5s
      retries: 3

  auth-service:
    build: ./services/auth-service
    container_name: telesoul-auth
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: ${REDIS_PASS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
    ports:
      - "${AUTH_SERVICE_PORT:-4000}:4000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build: ./services/gateway
    container_name: telesoul-gateway
    depends_on:
      auth-service:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      API_BASE_URL: http://auth-service:4000
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      TON_NETWORK: ${TON_NETWORK:-testnet}
      TON_WALLET_URL: ${TON_WALLET_URL}
    ports:
      - "${GATEWAY_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: 